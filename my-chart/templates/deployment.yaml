apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.myDeployName }}
  namespace: {{ .Values.namespace }}
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ .Values.DeployLables.lable1 }}
  template:
    metadata:
      labels:
        app: {{ .Values.DeployLables.lable1 }}
        service: {{ .Values.DeployLables.lable2 }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
    spec:
      containers:
        - name: {{ .Values.conteiner.name }}
          image: {{ .Values.image.repository }}
          #imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.conteiner.port }}
          volumeMounts:
          - name: myconfig1
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: webserver.default.conf
          readinessProbe: &healthcheck
            initialDelaySeconds: 60
            httpGet:
              path: /
              port: {{ .Values.conteiner.port }}
          livenessProbe: *healthcheck
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: hostname
      volumes:
        - name: myconfig1
          configMap:
            name: configmap

